// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique()
  password String
  role     Roles  @default(user)

  reviewAndRatings ReviewAndRating[]
  bookings         Booking[]
  carts            Cart[]

  @@map("users")
}

model Service {
  id               String            @id @default(uuid())
  title            String
  description      String
  price            Float
  status           ServiceStatus     @default(available)
  location         String
  reviewAndRatings ReviewAndRating[]
  bookings         Booking[]
  carts            Cart[]

  @@map("services")
}

model Booking {
  id   String @id @default(uuid())
  date String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])

  status    BookingStatus @default(pending)
  createdAt DateTime      @default(now())

  @@map("bookings")
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Int

  userId String
  user   User   @relation(fields: [userId], references: [id])

  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])

  @@map("review_and_ratings")
}

model Cart {
  id String @id @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])

  @@map("carts")
}

model Feedback {
  id     String @id @default(uuid())
  name   String
  email  String
  rating Int
  review String

  @@map("feedbacks")
}

model Blog {
  id          String @id @default(uuid())
  title       String
  description String

  @@map("blog_posts")
}

model Faq {
  id          String @id @default(uuid())
  title       String
  description String

  @@map("faqs")
}

enum Roles {
  user
  admin
  super_admin
}

enum BookingStatus {
  pending
  accept
  reject

  @@map("booking_status")
}

enum ServiceStatus {
  available
  not_available
  upcoming

  @@map("service_status")
}
